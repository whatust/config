# set default shell
set-option -g default-shell $SHELL
set-option -sg escape-time 10

# if run as "tmux attach", create a session if one does not already exist
new-session -n $HOST

set -g default-terminal 'st-256color'
set -ga terminal-overrides ",*256col*:Tc"

# Set scrollback buffer to 10000
set -g history-limit 10000

# Customize the status line
set -g status-fg  green
set -g status-bg  black

# Change key bind from C-b to C-a no Vim comflict
unbind C-b
set-option -g prefix C-a
bind-key C-a send-prefix

# Mouse scroll
#set -g mouse on

# Map vertical split to '|' and horizontal split to '-'
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"
bind v split-window -h -c "#{pane_current_path}"
bind h split-window -v -c "#{pane_current_path}"

# Remove original binds for vertical and horizontal splits
unbind '"'
unbind %

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -T copy-mode-vi C-h select-pane -L
bind-key -T copy-mode-vi C-j select-pane -D
bind-key -T copy-mode-vi C-k select-pane -U
bind-key -T copy-mode-vi C-l select-pane -R

# Reload config
bind r source-file ~/.config/tmux/tmux.conf

bind-key -n M-a resize-pane -L 3
bind-key -n M-s resize-pane -D 3
bind-key -n M-d resize-pane -U 3
bind-key -n M-f resize-pane -R 3
bind-key -n M-p previous-window
bind-key -n M-n next-window

# Yank copy like vim
setw -g mode-keys vi
bind P paste-buffer
bind-key -T copy-mode-vi v send -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-selection
bind-key -T copy-mode-vi r send-keys -X rectangle-toggle

# Send Yank text to cliboard
bind -T copy-mode-vi c send-keys -X copy-pipe-and-cancel 'xclip -in -selection clipboard'

# Movement on copy mode
bind-key -T edit-mode-vi k send-keys -X history-up
bind-key -T edit-mode-vi j send-keys -X history-down

######################
### DESIGN CHANGES ###
######################

# Basic status bar colors
set -g status-style "bg=default,fg=colour14"

# Left side status bar
set -g status-left-style "bg=default,fg=colour14"
set -g status-left-length 10
set -g status-left "[#S]"

# Right side status bar
set -g status-right-style "bg=default,fg=colour14"
set -g status-right-length 40
set -g status-right "\"#H\" %d %b %y, %H:%M"

# Window status
set -g window-status-format "#I:#W#F"
set -g window-status-current-format "#I:#W#F"

# Current window status
set -g window-status-current-style "bg=default,fg=colour14"

# Pane border
set -g pane-border-style "bg=default,fg=colour8"

# Active pane border
setw -g pane-active-border-style "bg=default,fg=colour3"

# Message
set -g message-style "bg=colour8,fg=colour15"
set -g message-style "bg=colour8,fg=colour15"

